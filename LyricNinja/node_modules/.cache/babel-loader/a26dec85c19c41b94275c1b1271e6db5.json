{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peran\\\\LyricNinja\\\\Lyric_Ninja\\\\src\\\\components\\\\FitContents.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nexport function FitContentsToWidth({\n  children\n}) {\n  const contents = useRef();\n  const outer = useRef();\n  const [widths, setWidths] = useState({});\n  useEffect(() => {\n    if (!contents.current || !outer.current) return;\n    const {\n      width: contentWidth,\n      height: innerHeight\n    } = contents.current.getBoundingClientRect();\n    const {\n      width: outerWidth\n    } = outer.current.getBoundingClientRect(); // eslint-disable-next-line no-restricted-globals\n\n    setWidths({\n      contentWidth,\n      outerWidth,\n      outerHeight,\n      innerHeight\n    });\n  }, [children]);\n  const {\n    contentWidth,\n    outerWidth,\n    innerHeight\n  } = widths;\n  const scale = outerWidth / contentWidth;\n  const newHeight = innerHeight * scale;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: outer,\n    style: {\n      textAlign: 'center',\n      height: `${newHeight}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    ref: contents,\n    style: {\n      transform: `scale(${scale})`,\n      display: 'inline-block',\n      transformOrigin: '50% 0%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, children));\n}","map":{"version":3,"sources":["C:/Users/Peran/LyricNinja/Lyric_Ninja/src/components/FitContents.tsx"],"names":["React","useState","useEffect","useRef","FitContentsToWidth","children","contents","outer","widths","setWidths","current","width","contentWidth","height","innerHeight","getBoundingClientRect","outerWidth","outerHeight","scale","newHeight","textAlign","transform","display","transformOrigin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAO,SAASC,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA0C;AAC7C,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;AACA,QAAMI,KAAK,GAAGJ,MAAM,EAApB;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACI,QAAQ,CAACI,OAAV,IAAqB,CAACH,KAAK,CAACG,OAAhC,EAAyC;AACzC,UAAM;AAAEC,MAAAA,KAAK,EAAEC,YAAT;AAAuBC,MAAAA,MAAM,EAAEC;AAA/B,QAA+CR,QAAQ,CAACI,OAAT,CAAiBK,qBAAjB,EAArD;AACA,UAAM;AAAEJ,MAAAA,KAAK,EAAEK;AAAT,QAAwBT,KAAK,CAACG,OAAN,CAAcK,qBAAd,EAA9B,CAHY,CAIZ;;AACAN,IAAAA,SAAS,CAAC;AAAEG,MAAAA,YAAF;AAAgBI,MAAAA,UAAhB;AAA4BC,MAAAA,WAA5B;AAAyCH,MAAAA;AAAzC,KAAD,CAAT;AACH,GANQ,EAMN,CAACT,QAAD,CANM,CAAT;AAQA,QAAM;AAAEO,IAAAA,YAAF;AAAgBI,IAAAA,UAAhB;AAA4BF,IAAAA;AAA5B,MAA4CN,MAAlD;AACA,QAAMU,KAAK,GAAGF,UAAU,GAAGJ,YAA3B;AACA,QAAMO,SAAS,GAAGL,WAAW,GAAGI,KAAhC;AAEA,sBAAO;AAAK,IAAA,GAAG,EAAEX,KAAV;AAAiB,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE,QAAb;AAAuBP,MAAAA,MAAM,EAAG,GAAEM,SAAU;AAA5C,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAM,IAAA,GAAG,EAAEb,QAAX;AAAqB,IAAA,KAAK,EAAE;AAAEe,MAAAA,SAAS,EAAG,SAAQH,KAAM,GAA5B;AAAgCI,MAAAA,OAAO,EAAE,cAAzC;AAAyDC,MAAAA,eAAe,EAAE;AAA1E,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoHlB,QAApH,CADG,CAAP;AAGH","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport function FitContentsToWidth({ children }) {\r\n    const contents = useRef();\r\n    const outer = useRef();\r\n    const [widths, setWidths] = useState({});\r\n    \r\n    useEffect(() => {\r\n        if (!contents.current || !outer.current) return;\r\n        const { width: contentWidth, height: innerHeight } = contents.current.getBoundingClientRect();\r\n        const { width: outerWidth } = outer.current.getBoundingClientRect();\r\n        // eslint-disable-next-line no-restricted-globals\r\n        setWidths({ contentWidth, outerWidth, outerHeight, innerHeight });\r\n    }, [children]);\r\n    \r\n    const { contentWidth, outerWidth, innerHeight } = widths;\r\n    const scale = outerWidth / contentWidth;\r\n    const newHeight = innerHeight * scale;\r\n    \r\n    return <div ref={outer} style={{ textAlign: 'center', height: `${newHeight}px` }}>\r\n        <span ref={contents} style={{ transform: `scale(${scale})`, display: 'inline-block', transformOrigin: '50% 0%' }}>{ children }</span>\r\n    </div>;\r\n}"]},"metadata":{},"sourceType":"module"}