{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peran\\\\LyricNinja\\\\Lyric_Ninja\\\\src\\\\components\\\\WordsDisplay.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst WordsDisplay = ({\n  word,\n  visible,\n  onComplete,\n  forward\n}) => {\n  const [progress, setProgress] = useState(0);\n  const duration = 0.3;\n  const animationFrameHandle = useRef(0);\n  const prevTime = useRef(performance.now());\n  const outputValueRange = 1;\n\n  function easeIn(x) {\n    return 1 - Math.cos(x * Math.PI / 2);\n  }\n\n  function easeOut(x) {\n    return Math.sin(x * Math.PI / 2);\n    ;\n  }\n\n  useEffect(() => {\n    setProgress(0);\n    prevTime.current = performance.now();\n\n    function render(timestamp) {\n      animationFrameHandle.current = requestAnimationFrame(render);\n      setProgress(oldValue => {\n        if (oldValue >= 1) {\n          cancelAnimationFrame(animationFrameHandle.current);\n          return 0;\n        }\n\n        const secondsElapsed = (timestamp - prevTime.current) / 1000;\n        return Math.max(0, Math.min(oldValue + outputValueRange * secondsElapsed / duration, 1));\n      });\n      prevTime.current = timestamp;\n    }\n\n    render(performance.now());\n    return () => cancelAnimationFrame(animationFrameHandle.current);\n  }, [onComplete]);\n  let op;\n  let pos;\n\n  if (visible) {\n    op = progress === 0 ? 1 : easeOut(progress);\n\n    if (forward) {\n      pos = progress === 0 ? 0 : 100 - 100 * easeOut(progress);\n    } else {\n      pos = progress === 0 ? 0 : -100 + 100 * easeOut(progress);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-word\",\n      style: {\n        opacity: op,\n        transform: `translateX(${pos}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, word), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rhymes\",\n      style: {\n        top: `10%`,\n        opacity: op,\n        transform: `translateX(${pos}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, word), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rhymes\",\n      style: {\n        opacity: op,\n        transform: `translateX(${pos}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, word), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rhymes\",\n      style: {\n        opacity: op,\n        transform: `translateX(${pos}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, word), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rhymes\",\n      style: {\n        opacity: op,\n        transform: `translateX(${pos}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, word));\n  } else {\n    op = progress === 0 ? 0 : 1 - easeIn(progress) * 1.3;\n\n    if (forward) {\n      pos = -100 * easeIn(progress);\n    } else {\n      pos = 100 * easeIn(progress);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-word\",\n      style: {\n        opacity: op,\n        transform: `translateX(${pos}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, word);\n  }\n};\n\nexport default WordsDisplay;","map":{"version":3,"sources":["C:/Users/Peran/LyricNinja/Lyric_Ninja/src/components/WordsDisplay.tsx"],"names":["React","useState","useEffect","useRef","WordsDisplay","word","visible","onComplete","forward","progress","setProgress","duration","animationFrameHandle","prevTime","performance","now","outputValueRange","easeIn","x","Math","cos","PI","easeOut","sin","current","render","timestamp","requestAnimationFrame","oldValue","cancelAnimationFrame","secondsElapsed","max","min","op","pos","opacity","transform","top"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\ninterface WordsDisplayProps {\r\n    onComplete: any;\r\n    word: string;\r\n    visible: boolean;\r\n    forward: boolean;\r\n}\r\n\r\nconst WordsDisplay: React.FC<WordsDisplayProps> = ({word, visible, onComplete, forward}) => {\r\n\r\n    const [progress, setProgress] = useState(0);\r\n    const duration = 0.3;\r\n    const animationFrameHandle = useRef(0);\r\n    const prevTime = useRef(performance.now());\r\n    const outputValueRange = 1;\r\n\r\n    function easeIn(x: number): number {\r\n        return 1 - Math.cos((x * Math.PI) / 2);\r\n    }\r\n\r\n    function easeOut(x: number): number {\r\n        return Math.sin((x * Math.PI) / 2);;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setProgress(0);\r\n        prevTime.current = performance.now();\r\n        function render(timestamp: DOMHighResTimeStamp) {\r\n            animationFrameHandle.current = requestAnimationFrame(render);\r\n            setProgress(oldValue => {\r\n                if (oldValue >= 1) {\r\n                    \r\n                    cancelAnimationFrame(animationFrameHandle.current);\r\n                    \r\n                    return 0;\r\n                } \r\n                const secondsElapsed = (timestamp - prevTime.current) / 1000;\r\n                return Math.max(0, Math.min(oldValue + outputValueRange * secondsElapsed / duration, 1));\r\n            })\r\n            prevTime.current = timestamp;\r\n        }\r\n\r\n        render(performance.now());\r\n        return () => cancelAnimationFrame(animationFrameHandle.current);\r\n    }, [onComplete]);\r\n\r\n    let op;\r\n    let pos;\r\n\r\n    if (visible) {\r\n\r\n        op = (progress === 0) ? 1 : easeOut(progress);\r\n        if (forward) {\r\n            pos = (progress === 0) ? 0 : 100-100*easeOut(progress)\r\n        }\r\n        else {\r\n            pos = (progress === 0) ? 0 : -100+100*easeOut(progress);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"main-word\" style={{ opacity: op, transform: `translateX(${ pos }%)`}}>\r\n                {word}\r\n                </div>\r\n                <div className=\"rhymes\" style={{ top: `10%`, opacity: op, transform: `translateX(${pos}%)` }}>\r\n                    {word}\r\n                </div>\r\n                <div className=\"rhymes\" style={{ opacity: op, transform: `translateX(${pos}%)` }}>\r\n                    {word}\r\n                </div>\r\n                <div className=\"rhymes\" style={{ opacity: op, transform: `translateX(${pos}%)` }}>\r\n                    {word}\r\n                </div>\r\n                <div className=\"rhymes\" style={{ opacity: op, transform: `translateX(${pos}%)` }}>\r\n                    {word}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        op = (progress === 0) ? 0 : 1-easeIn(progress)*1.3;\r\n\r\n        if (forward) {\r\n            pos = -100*easeIn(progress);\r\n        }\r\n        else {\r\n            pos = 100*easeIn(progress);\r\n        }\r\n\r\n        return (\r\n            <div className=\"main-word\" style={{ opacity: op, transform: `translateX(${pos}%)` }}>\r\n                {word}\r\n            </div>\r\n        );\r\n    }\r\n  };\r\n\r\nexport default WordsDisplay;\r\n  "]},"metadata":{},"sourceType":"module"}