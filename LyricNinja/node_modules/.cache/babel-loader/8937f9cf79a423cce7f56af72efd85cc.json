{"ast":null,"code":"import { w as writeTask } from './index-29df6f59.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nvar createButtonActiveGesture = function (el, isButton) {\n  var touchedButton;\n\n  var activateButtonAtPoint = function (x, y, hapticFeedbackFn) {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    var target = document.elementFromPoint(x, y);\n\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n\n    if (target !== touchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n\n  var setActiveButton = function (button, hapticFeedbackFn) {\n    touchedButton = button;\n    var buttonToModify = touchedButton;\n    writeTask(function () {\n      return buttonToModify.classList.add('ion-activated');\n    });\n    hapticFeedbackFn();\n  };\n\n  var clearActiveButton = function (dispatchClick) {\n    if (dispatchClick === void 0) {\n      dispatchClick = false;\n    }\n\n    if (!touchedButton) {\n      return;\n    }\n\n    var buttonToModify = touchedButton;\n    writeTask(function () {\n      return buttonToModify.classList.remove('ion-activated');\n    });\n\n    if (dispatchClick) {\n      touchedButton.click();\n    }\n\n    touchedButton = undefined;\n  };\n\n  return createGesture({\n    el: el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: function (ev) {\n      return activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart);\n    },\n    onMove: function (ev) {\n      return activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged);\n    },\n    onEnd: function () {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };","map":{"version":3,"sources":["C:/Users/Peran/LyricNinja/Lyric_Ninja/node_modules/@ionic/core/dist/esm-es5/button-active-274abd17.js"],"names":["w","writeTask","createGesture","h","hapticSelectionEnd","a","hapticSelectionStart","b","hapticSelectionChanged","createButtonActiveGesture","el","isButton","touchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","classList","add","dispatchClick","remove","click","undefined","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","c"],"mappings":"AAAA,SAASA,CAAC,IAAIC,SAAd,QAA+B,qBAA/B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,CAAC,IAAIC,kBAAd,EAAkCC,CAAC,IAAIC,oBAAvC,EAA6DC,CAAC,IAAIC,sBAAlE,QAAgG,sBAAhG;;AACA,IAAIC,yBAAyB,GAAG,UAAUC,EAAV,EAAcC,QAAd,EAAwB;AACpD,MAAIC,aAAJ;;AACA,MAAIC,qBAAqB,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,gBAAhB,EAAkC;AAC1D,QAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACjC;AACH;;AACD,QAAIC,MAAM,GAAGD,QAAQ,CAACE,gBAAT,CAA0BL,CAA1B,EAA6BC,CAA7B,CAAb;;AACA,QAAI,CAACG,MAAD,IAAW,CAACP,QAAQ,CAACO,MAAD,CAAxB,EAAkC;AAC9BE,MAAAA,iBAAiB;AACjB;AACH;;AACD,QAAIF,MAAM,KAAKN,aAAf,EAA8B;AAC1BQ,MAAAA,iBAAiB;AACjBC,MAAAA,eAAe,CAACH,MAAD,EAASF,gBAAT,CAAf;AACH;AACJ,GAbD;;AAcA,MAAIK,eAAe,GAAG,UAAUC,MAAV,EAAkBN,gBAAlB,EAAoC;AACtDJ,IAAAA,aAAa,GAAGU,MAAhB;AACA,QAAIC,cAAc,GAAGX,aAArB;AACAX,IAAAA,SAAS,CAAC,YAAY;AAAE,aAAOsB,cAAc,CAACC,SAAf,CAAyBC,GAAzB,CAA6B,eAA7B,CAAP;AAAuD,KAAtE,CAAT;AACAT,IAAAA,gBAAgB;AACnB,GALD;;AAMA,MAAII,iBAAiB,GAAG,UAAUM,aAAV,EAAyB;AAC7C,QAAIA,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,MAAAA,aAAa,GAAG,KAAhB;AAAwB;;AACxD,QAAI,CAACd,aAAL,EAAoB;AAChB;AACH;;AACD,QAAIW,cAAc,GAAGX,aAArB;AACAX,IAAAA,SAAS,CAAC,YAAY;AAAE,aAAOsB,cAAc,CAACC,SAAf,CAAyBG,MAAzB,CAAgC,eAAhC,CAAP;AAA0D,KAAzE,CAAT;;AACA,QAAID,aAAJ,EAAmB;AACfd,MAAAA,aAAa,CAACgB,KAAd;AACH;;AACDhB,IAAAA,aAAa,GAAGiB,SAAhB;AACH,GAXD;;AAYA,SAAO3B,aAAa,CAAC;AACjBQ,IAAAA,EAAE,EAAEA,EADa;AAEjBoB,IAAAA,WAAW,EAAE,kBAFI;AAGjBC,IAAAA,SAAS,EAAE,CAHM;AAIjBC,IAAAA,OAAO,EAAE,UAAUC,EAAV,EAAc;AAAE,aAAOpB,qBAAqB,CAACoB,EAAE,CAACC,QAAJ,EAAcD,EAAE,CAACE,QAAjB,EAA2B7B,oBAA3B,CAA5B;AAA+E,KAJvF;AAKjB8B,IAAAA,MAAM,EAAE,UAAUH,EAAV,EAAc;AAAE,aAAOpB,qBAAqB,CAACoB,EAAE,CAACC,QAAJ,EAAcD,EAAE,CAACE,QAAjB,EAA2B3B,sBAA3B,CAA5B;AAAiF,KALxF;AAMjB6B,IAAAA,KAAK,EAAE,YAAY;AACfjB,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAhB,MAAAA,kBAAkB;AACrB;AATgB,GAAD,CAApB;AAWH,CA7CD;;AA8CA,SAASK,yBAAyB,IAAI6B,CAAtC","sourcesContent":["import { w as writeTask } from './index-29df6f59.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\nvar createButtonActiveGesture = function (el, isButton) {\n    var touchedButton;\n    var activateButtonAtPoint = function (x, y, hapticFeedbackFn) {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        var target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== touchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    var setActiveButton = function (button, hapticFeedbackFn) {\n        touchedButton = button;\n        var buttonToModify = touchedButton;\n        writeTask(function () { return buttonToModify.classList.add('ion-activated'); });\n        hapticFeedbackFn();\n    };\n    var clearActiveButton = function (dispatchClick) {\n        if (dispatchClick === void 0) { dispatchClick = false; }\n        if (!touchedButton) {\n            return;\n        }\n        var buttonToModify = touchedButton;\n        writeTask(function () { return buttonToModify.classList.remove('ion-activated'); });\n        if (dispatchClick) {\n            touchedButton.click();\n        }\n        touchedButton = undefined;\n    };\n    return createGesture({\n        el: el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: function (ev) { return activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart); },\n        onMove: function (ev) { return activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged); },\n        onEnd: function () {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n        }\n    });\n};\nexport { createButtonActiveGesture as c };\n"]},"metadata":{},"sourceType":"module"}