{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peran\\\\LyricNinja\\\\Lyric_Ninja\\\\src\\\\components\\\\Words.tsx\";\nimport React, { useState, useRef } from 'react';\nimport ProgressBar from './ProgressBar';\nimport MainWord from './MainWord';\nimport { IonIcon } from '@ionic/react';\n\nconst Words = ({\n  words,\n  index\n}) => {\n  const [currentWord, setCurrentWord] = useState(\"a\");\n  const duration = 10;\n  const animationFrameHandle = useRef(0);\n  const prevTime = useRef(performance.now());\n  const outputValueRange = 1;\n\n  function nextWord() {\n    setCurrentWord(oldValue => {\n      return oldValue + \"a\";\n    });\n  }\n\n  function previousWord() {\n    console.log(\"Previous Word!\");\n  } // function ease(x: number): number {\n  //   return x;\n  // }\n  // useEffect(() => {\n  //   function render(timestamp: DOMHighResTimeStamp) {\n  //     setProgress(oldValue => {\n  //       if (oldValue >= 1) {\n  //         if (onComplete) onComplete();\n  //         return 0;\n  //       }\n  //       const secondsElapsed = (timestamp - prevTime.current) / 1000;\n  //       return oldValue + outputValueRange * secondsElapsed / duration;\n  //     })\n  //     prevTime.current = timestamp;\n  //     animationFrameHandle.current = requestAnimationFrame(render);\n  //   }\n  //   render(performance.now());\n  //   return () => cancelAnimationFrame(animationFrameHandle.current);\n  // }, [onComplete])\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chevron-button\",\n    onClick: () => previousWord(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    className: \"right chevron\",\n    src: \"data:image/svg+xml;utf8,<svg width=\\\"67\\\" height=\\\"102\\\" viewBox=\\\"0 0 67 102\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r <rect x=\\\"50.9497\\\" y=\\\"101.606\\\" width=\\\"72.0537\\\" height=\\\"22.6986\\\" transform=\\\"rotate(-135 50.9497 101.606)\\\" fill=\\\"white\\\"/>\\r <rect x=\\\"66.7626\\\" y=\\\"16.0503\\\" width=\\\"70.4294\\\" height=\\\"22.6986\\\" transform=\\\"rotate(135 66.7626 16.0503)\\\" fill=\\\"white\\\"/>\\r </svg>\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chevron-button right\",\n    onClick: () => nextWord(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    className: \"chevron\",\n    src: \"data:image/svg+xml;utf8,<svg width=\\\"67\\\" height=\\\"102\\\" viewBox=\\\"0 0 67 102\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r <rect x=\\\"16.0503\\\" width=\\\"72.0537\\\" height=\\\"22.6986\\\" transform=\\\"rotate(45 16.0503 0)\\\" fill=\\\"white\\\"/>\\r <rect x=\\\"0.237427\\\" y=\\\"85.5559\\\" width=\\\"70.4294\\\" height=\\\"22.6986\\\" transform=\\\"rotate(-45 0.237427 85.5559)\\\" fill=\\\"white\\\"/>\\r </svg>\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(MainWord, {\n    word: currentWord,\n    nextWord: nextWord,\n    position: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MainWord, {\n    word: \"second\",\n    opacity: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ProgressBar, {\n    onComplete: () => nextWord(),\n    currentWord: currentWord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Words;","map":{"version":3,"sources":["C:/Users/Peran/LyricNinja/Lyric_Ninja/src/components/Words.tsx"],"names":["React","useState","useRef","ProgressBar","MainWord","IonIcon","Words","words","index","currentWord","setCurrentWord","duration","animationFrameHandle","prevTime","performance","now","outputValueRange","nextWord","oldValue","previousWord","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,cAAxB;;AAQA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AAGrD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,GAAD,CAA9C;AACA,QAAMU,QAAQ,GAAG,EAAjB;AACA,QAAMC,oBAAoB,GAAGV,MAAM,CAAC,CAAD,CAAnC;AACA,QAAMW,QAAQ,GAAGX,MAAM,CAACY,WAAW,CAACC,GAAZ,EAAD,CAAvB;AACA,QAAMC,gBAAgB,GAAG,CAAzB;;AAEA,WAASC,QAAT,GAAoB;AAChBP,IAAAA,cAAc,CAACQ,QAAQ,IAAI;AACvB,aAAOA,QAAQ,GAAC,GAAhB;AACD,KAFW,CAAd;AAGH;;AACD,WAASC,YAAT,GAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GAhBoD,CAkBrD;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAE,MAAMF,YAAY,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAmC,IAAA,GAAG,EAAC,uZAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,eAOA;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,OAAO,EAAE,MAAMF,QAAQ,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,SAAnB;AAA6B,IAAA,GAAG,EAAC,mYAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAPA,eAaA,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAER,WAAhB;AAA6B,IAAA,QAAQ,EAAEQ,QAAvC;AAAiD,IAAA,QAAQ,EAAE,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,eAcA,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,QAAhB;AAA0B,IAAA,OAAO,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdA,eAeA,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAE,MAAMA,QAAQ,EAAvC;AAA2C,IAAA,WAAW,EAAER,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfA,CADJ;AAmBD,CA9DH;;AAgEA,eAAeH,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport ProgressBar from './ProgressBar'\r\nimport MainWord from './MainWord'\r\nimport { IonIcon } from '@ionic/react';\r\n\r\ninterface WordsProps {\r\n  words: string[];\r\n  index: number;\r\n}\r\n\r\n\r\nconst Words: React.FC<WordsProps> = ({ words, index}) => {\r\n\r\n\r\n    const [currentWord, setCurrentWord] = useState(\"a\");\r\n    const duration = 10;\r\n    const animationFrameHandle = useRef(0);\r\n    const prevTime = useRef(performance.now());\r\n    const outputValueRange = 1;\r\n\r\n    function nextWord() {\r\n        setCurrentWord(oldValue => {\r\n            return oldValue+\"a\"\r\n          })\r\n    }\r\n    function previousWord() {\r\n        console.log(\"Previous Word!\")\r\n    }\r\n\r\n    // function ease(x: number): number {\r\n    //   return x;\r\n    // }\r\n\r\n    // useEffect(() => {\r\n\r\n    //   function render(timestamp: DOMHighResTimeStamp) {\r\n    //     setProgress(oldValue => {\r\n    //       if (oldValue >= 1) {\r\n    //         if (onComplete) onComplete();\r\n    //         return 0;\r\n    //       }\r\n    //       const secondsElapsed = (timestamp - prevTime.current) / 1000;\r\n    //       return oldValue + outputValueRange * secondsElapsed / duration;\r\n    //     })\r\n    //     prevTime.current = timestamp;\r\n    //     animationFrameHandle.current = requestAnimationFrame(render);\r\n\r\n    //   }\r\n\r\n    //   render(performance.now());\r\n    //   return () => cancelAnimationFrame(animationFrameHandle.current);\r\n    // }, [onComplete])\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"chevron-button\" onClick={() => previousWord()}>\r\n        <IonIcon className=\"right chevron\" src='data:image/svg+xml;utf8,<svg width=\"67\" height=\"102\" viewBox=\"0 0 67 102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect x=\"50.9497\" y=\"101.606\" width=\"72.0537\" height=\"22.6986\" transform=\"rotate(-135 50.9497 101.606)\" fill=\"white\"/>\r\n        <rect x=\"66.7626\" y=\"16.0503\" width=\"70.4294\" height=\"22.6986\" transform=\"rotate(135 66.7626 16.0503)\" fill=\"white\"/>\r\n        </svg>' />\r\n        </div>\r\n        <div className=\"chevron-button right\" onClick={() => nextWord()}>\r\n        <IonIcon className=\"chevron\" src='data:image/svg+xml;utf8,<svg width=\"67\" height=\"102\" viewBox=\"0 0 67 102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect x=\"16.0503\" width=\"72.0537\" height=\"22.6986\" transform=\"rotate(45 16.0503 0)\" fill=\"white\"/>\r\n            <rect x=\"0.237427\" y=\"85.5559\" width=\"70.4294\" height=\"22.6986\" transform=\"rotate(-45 0.237427 85.5559)\" fill=\"white\"/>\r\n            </svg>' />\r\n        </div>\r\n        <MainWord word={currentWord} nextWord={nextWord} position={0}></MainWord>\r\n        <MainWord word={\"second\"} opacity={0}></MainWord>\r\n        <ProgressBar onComplete={() => nextWord()} currentWord={currentWord}></ProgressBar>\r\n        </div>\r\n    );\r\n  };\r\n\r\nexport default Words;\r\n  "]},"metadata":{},"sourceType":"module"}