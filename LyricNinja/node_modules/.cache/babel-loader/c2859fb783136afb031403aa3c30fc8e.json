{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peran\\\\LyricNinja\\\\Lyric_Ninja\\\\src\\\\components\\\\WordsDisplay.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst WordsDisplay = ({\n  word,\n  visible,\n  forward,\n  rhymes\n}) => {\n  const [visibility, setVisibility] = useState(visible ? 1 : 0);\n  const duration = 0.3;\n  const animationFrameHandle = useRef(0);\n  const prevTime = useRef(performance.now());\n  const outputValueRange = 1;\n\n  function easeIn(x) {\n    return 1 - Math.cos(x * Math.PI / 2);\n  }\n\n  function easeOut(x) {\n    return Math.sin(x * Math.PI / 2);\n    ;\n  } // useEffect(() => {\n  //     // let newProgress = 0.01\n  //     // setVisibility(newProgress);\n  //     prevTime.current = performance.now();\n  //     function render(timestamp: DOMHighResTimeStamp) {\n  //         animationFrameHandle.current = requestAnimationFrame(render);\n  //         if (visible) \n  //         else \n  //         if (newProgress >= 1) {\n  //             cancelAnimationFrame(animationFrameHandle.current);\n  //             newProgress = 1;\n  //         } \n  //         else {\n  //             const secondsElapsed = (timestamp - prevTime.current) / 1000;\n  //             newProgress = Math.max(0, Math.min(newProgress + outputValueRange * secondsElapsed / duration, 1));\n  //         }\n  //         setVisibility(newProgress);\n  //         prevTime.current = timestamp;\n  //     }\n  //     render(performance.now());\n  //     return () => cancelAnimationFrame(animationFrameHandle.current);\n  // }, [visible]);\n\n\n  useEffect(() => {\n    // let newProgress = 0.01\n    // setVisibility(newProgress);\n    prevTime.current = performance.now();\n\n    function render(timestamp) {\n      animationFrameHandle.current = requestAnimationFrame(render);\n      let visibilityTarget = visible ? 1 : 0;\n      const secondsElapsed = Math.max((timestamp - prevTime.current) / 1000, 0);\n      if (secondsElapsed < 0) console.log(\"Uh oh\");\n      const progress = outputValueRange * secondsElapsed / duration;\n\n      if (visible && visibility < visibilityTarget) {\n        // const newV = Math.max(0, Math.min(visibility + progress, 1));\n        setVisibility(visibility => Math.max(0, Math.min(visibility + progress, 1))); //increase\n        // console.log(\"Increase: \", visibility, progress, visibilityTarget);\n      } else if (!visible && visibility > visibilityTarget) {\n        // const newV = Math.max(0, Math.min(visibility - progress, 1));\n        setVisibility(visibility => Math.max(0, Math.min(visibility - progress, 1))); //decrease\n        // console.log(\"Decrease: \", visibility, progress, visibilityTarget);\n      }\n\n      if (visibilityTarget === visibility) {\n        cancelAnimationFrame(animationFrameHandle.current);\n        console.log(\"animation cancelled!\");\n      }\n\n      prevTime.current = timestamp;\n    }\n\n    render(performance.now());\n    return () => cancelAnimationFrame(animationFrameHandle.current);\n  }, [visible]);\n  let op;\n  let pos; // console.log(visibility, word, visible);\n\n  if (visible) {\n    op = easeOut(visibility);\n\n    if (forward) {\n      pos = 100 - 100 * easeOut(visibility);\n    } else {\n      pos = -100 + 100 * easeOut(visibility);\n    }\n  } else {\n    op = easeIn(visibility);\n\n    if (forward) {\n      pos = -100 * easeIn(visibility);\n    } else {\n      pos = 100 * easeIn(visibility);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rhymes\",\n    style: {\n      top: `13%`,\n      opacity: op * .3,\n      transform: `translateX(${pos}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, rhymes[6]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rhymes\",\n    style: {\n      top: `21%`,\n      opacity: op * .43,\n      transform: `translateX(${pos}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, rhymes[4]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rhymes\",\n    style: {\n      top: `29%`,\n      opacity: op * .57,\n      transform: `translateX(${pos}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, rhymes[2]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rhymes\",\n    style: {\n      top: `37%`,\n      opacity: op * .7,\n      transform: `translateX(${pos}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, rhymes[0]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-word\",\n    style: {\n      opacity: op,\n      transform: `translateX(${pos}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, word), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rhymes\",\n    style: {\n      top: `58%`,\n      opacity: op * .7,\n      transform: `translateX(${pos}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, rhymes[1]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rhymes\",\n    style: {\n      top: `66%`,\n      opacity: op * .57,\n      transform: `translateX(${pos}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, rhymes[3]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rhymes\",\n    style: {\n      top: `74%`,\n      opacity: op * .43,\n      transform: `translateX(${pos}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, rhymes[5]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rhymes\",\n    style: {\n      top: `82%`,\n      opacity: op * .3,\n      transform: `translateX(${pos}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, rhymes[7]));\n};\n\nexport default WordsDisplay;","map":{"version":3,"sources":["C:/Users/Peran/LyricNinja/Lyric_Ninja/src/components/WordsDisplay.tsx"],"names":["React","useState","useEffect","useRef","WordsDisplay","word","visible","forward","rhymes","visibility","setVisibility","duration","animationFrameHandle","prevTime","performance","now","outputValueRange","easeIn","x","Math","cos","PI","easeOut","sin","current","render","timestamp","requestAnimationFrame","visibilityTarget","secondsElapsed","max","console","log","progress","min","cancelAnimationFrame","op","pos","top","opacity","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\ninterface WordsDisplayProps {\r\n    word: string;\r\n    visible: boolean;\r\n    forward: boolean;\r\n    rhymes: string[];\r\n}\r\n\r\nconst WordsDisplay: React.FC<WordsDisplayProps> = ({word, visible, forward, rhymes}) => {\r\n\r\n    const [visibility, setVisibility] = useState(visible ? 1 : 0);\r\n    const duration = 0.3;\r\n    const animationFrameHandle = useRef(0);\r\n    const prevTime = useRef(performance.now());\r\n    const outputValueRange = 1;\r\n\r\n    function easeIn(x: number): number {\r\n        return 1 - Math.cos((x * Math.PI) / 2);\r\n    }\r\n\r\n    function easeOut(x: number): number {\r\n        return Math.sin((x * Math.PI) / 2);;\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // let newProgress = 0.01\r\n    //     // setVisibility(newProgress);\r\n    //     prevTime.current = performance.now();\r\n    //     function render(timestamp: DOMHighResTimeStamp) {\r\n    //         animationFrameHandle.current = requestAnimationFrame(render);\r\n            \r\n    //         if (visible) \r\n    //         else \r\n\r\n    //         if (newProgress >= 1) {\r\n                    \r\n    //             cancelAnimationFrame(animationFrameHandle.current);\r\n                \r\n    //             newProgress = 1;\r\n    //         } \r\n    //         else {\r\n    //             const secondsElapsed = (timestamp - prevTime.current) / 1000;\r\n    //             newProgress = Math.max(0, Math.min(newProgress + outputValueRange * secondsElapsed / duration, 1));\r\n    //         }\r\n\r\n    //         setVisibility(newProgress);\r\n    //         prevTime.current = timestamp;\r\n    //     }\r\n\r\n    //     render(performance.now());\r\n    //     return () => cancelAnimationFrame(animationFrameHandle.current);\r\n    // }, [visible]);\r\n\r\n    useEffect(() => {\r\n        // let newProgress = 0.01\r\n        // setVisibility(newProgress);\r\n        prevTime.current = performance.now();\r\n\r\n        function render(timestamp: DOMHighResTimeStamp) {\r\n            animationFrameHandle.current = requestAnimationFrame(render);\r\n            let visibilityTarget = visible ? 1 : 0;\r\n            const secondsElapsed = Math.max((timestamp - prevTime.current) / 1000, 0);\r\n\r\n            if (secondsElapsed < 0) console.log(\"Uh oh\");\r\n            \r\n            const progress = outputValueRange * secondsElapsed / duration;\r\n            \r\n            if (visible && visibility < visibilityTarget) {\r\n                // const newV = Math.max(0, Math.min(visibility + progress, 1));\r\n                setVisibility(visibility => Math.max(0, Math.min(visibility + progress, 1))) //increase\r\n                // console.log(\"Increase: \", visibility, progress, visibilityTarget);\r\n            }   \r\n            else if (!visible && visibility > visibilityTarget) {\r\n                // const newV = Math.max(0, Math.min(visibility - progress, 1));\r\n                setVisibility(visibility => Math.max(0, Math.min(visibility - progress, 1))) //decrease\r\n                // console.log(\"Decrease: \", visibility, progress, visibilityTarget);\r\n            }\r\n            \r\n            if (visibilityTarget === visibility) {\r\n                cancelAnimationFrame(animationFrameHandle.current);\r\n                console.log(\"animation cancelled!\");\r\n            }\r\n\r\n            prevTime.current = timestamp;\r\n        }\r\n        \r\n        render(performance.now());\r\n        return () => cancelAnimationFrame(animationFrameHandle.current);\r\n    }, [visible]);\r\n\r\n    let op;\r\n    let pos;\r\n    // console.log(visibility, word, visible);\r\n\r\n    if (visible) {\r\n\r\n        op = easeOut(visibility);\r\n        if (forward) {\r\n            pos = 100-100*easeOut(visibility)\r\n        }\r\n        else {\r\n            pos = -100+100*easeOut(visibility);\r\n        }\r\n    }\r\n    else {\r\n        op = easeIn(visibility);\r\n\r\n        if (forward) {\r\n            pos = -100*easeIn(visibility);\r\n        }\r\n        else {\r\n            pos = 100*easeIn(visibility);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"rhymes\" style={{ top: `13%`, opacity: op*.3, transform: `translateX(${pos}%)` }}>\r\n                {rhymes[6]}\r\n            </div>\r\n            <div className=\"rhymes\" style={{ top: `21%`,opacity: op*.43, transform: `translateX(${pos}%)` }}>\r\n                {rhymes[4]}\r\n            </div>\r\n            <div className=\"rhymes\" style={{ top: `29%`,opacity: op*.57, transform: `translateX(${pos}%)` }}>\r\n                {rhymes[2]}\r\n            </div>\r\n            <div className=\"rhymes\" style={{ top: `37%`,opacity: op*.7, transform: `translateX(${pos}%)` }}>\r\n                {rhymes[0]}\r\n            </div>\r\n            <div className=\"main-word\" style={{ opacity: op, transform: `translateX(${ pos }%)`}}>\r\n                {word}\r\n            </div>\r\n            <div className=\"rhymes\" style={{ top: `58%`, opacity: op*.7, transform: `translateX(${pos}%)` }}>\r\n                {rhymes[1]}\r\n            </div>\r\n            <div className=\"rhymes\" style={{ top: `66%`,opacity: op*.57, transform: `translateX(${pos}%)` }}>\r\n                {rhymes[3]}\r\n            </div>\r\n            <div className=\"rhymes\" style={{ top: `74%`,opacity: op*.43, transform: `translateX(${pos}%)` }}>\r\n                {rhymes[5]}\r\n            </div>\r\n            <div className=\"rhymes\" style={{ top: `82%`,opacity: op*.3, transform: `translateX(${pos}%)` }}>\r\n                {rhymes[7]}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n  };\r\n\r\nexport default WordsDisplay;\r\n  "]},"metadata":{},"sourceType":"module"}