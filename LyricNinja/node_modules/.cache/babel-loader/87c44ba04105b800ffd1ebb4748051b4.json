{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peran\\\\LyricNinja\\\\Lyric_Ninja\\\\src\\\\components\\\\Words.tsx\";\nimport React, { useState, useRef } from 'react';\nimport ProgressBar from './ProgressBar';\nimport WordsDisplay from './WordsDisplay';\nimport Chevrons from './Chevrons';\nimport { AA } from '../assets/data/AA';\nimport { AE } from '../assets/data/AE';\nimport { AH } from '../assets/data/AH';\n\nconst Words = () => {\n  const [showFirst, setShowFirst] = useState(true);\n  const [firstIndex, setFirstIndex] = useState(0);\n  const [secondIndex, setSecondIndex] = useState(-1);\n  const [forward, setForward] = useState(true);\n  const maxWordHistory = 6;\n  const vowel = useRef(0);\n  const vowels = [AA, AE, AH]; //, AH, AO, AW, AY, EH, EY, IH, IY, OW, OY, UH, UW];\n\n  const [words, setWords] = useState([getNewWord(), getNewWord()]);\n  const [rhymes, setRhymes] = useState([getRhymes(words[0]), getRhymes(words[1])]);\n\n  function getRhymes(word) {\n    return [word + \"1\", word + \"2\", word + \"3\", word + \"4\", word + \"5\", word + \"6\", word + \"7\", word + \"8\"];\n  }\n\n  function getNewWord() {\n    // setVowel(Math.floor(Math.random() * vowels.length));\n    // console.log(Object.keys(vowels[vowel]).length);\n    // switch (vowel) {\n    //     case 0:\n    //         let length = Object.keys(AA).length\n    // }\n    const vowels = [AA, AE, AH]; //returns lengths\n\n    console.log(Object.keys(AH).length); //returns null error\n\n    console.log(Object.keys(vowels[vowel]).length);\n    console.log(vowel);\n    return \"extra\";\n  }\n\n  function forwardWord() {\n    let nextFirstIndex = firstIndex;\n    let nextSecondIndex = secondIndex;\n\n    if (Math.max(secondIndex, firstIndex) + 1 >= words.length) {\n      const newWords = [...words];\n      const newWord = getNewWord();\n      const newRhymes = [...rhymes];\n      newRhymes.push(getRhymes(newWord));\n      newWords.push(newWord);\n\n      if (newWords.length > maxWordHistory) {\n        newWords.shift();\n        newRhymes.shift();\n        nextFirstIndex -= 1;\n        nextSecondIndex -= 1;\n      }\n\n      setRhymes(newRhymes);\n      setWords(newWords);\n    }\n\n    if (showFirst && firstIndex > secondIndex) nextSecondIndex += 2;\n    if (!showFirst && secondIndex > firstIndex) nextFirstIndex += 2;\n    setFirstIndex(nextFirstIndex);\n    setSecondIndex(nextSecondIndex);\n    setShowFirst(!showFirst);\n    setForward(true);\n  }\n\n  function canGoBack() {\n    const minValue = forward ? 0 : 1;\n    if (Math.min(firstIndex, secondIndex) < minValue) return false;\n    return true;\n  }\n\n  function previousWord() {\n    if (!canGoBack()) return;\n    setForward(false);\n    setShowFirst(!showFirst);\n    if (showFirst && firstIndex > secondIndex) return;\n    if (!showFirst && secondIndex > firstIndex) return;\n    if (showFirst) setSecondIndex(secondIndex - 2);else setFirstIndex(firstIndex - 2);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"words\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WordsDisplay, {\n    word: words[firstIndex],\n    visible: showFirst,\n    forward: forward,\n    rhymes: rhymes[firstIndex],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WordsDisplay, {\n    word: words[secondIndex],\n    visible: !showFirst,\n    forward: forward,\n    rhymes: rhymes[secondIndex < 0 ? 0 : secondIndex],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProgressBar, {\n    onComplete: () => forwardWord(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chevron-button\",\n    onClick: () => previousWord(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Chevrons, {\n    enabled: canGoBack(),\n    left: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chevron-button right\",\n    onClick: () => forwardWord(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Chevrons, {\n    enabled: true,\n    left: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Words;","map":{"version":3,"sources":["C:/Users/Peran/LyricNinja/Lyric_Ninja/src/components/Words.tsx"],"names":["React","useState","useRef","ProgressBar","WordsDisplay","Chevrons","AA","AE","AH","Words","showFirst","setShowFirst","firstIndex","setFirstIndex","secondIndex","setSecondIndex","forward","setForward","maxWordHistory","vowel","vowels","words","setWords","getNewWord","rhymes","setRhymes","getRhymes","word","console","log","Object","keys","length","forwardWord","nextFirstIndex","nextSecondIndex","Math","max","newWords","newWord","newRhymes","push","shift","canGoBack","minValue","min","previousWord"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,EAAT,QAAmB,mBAAnB;AACA,SAASC,EAAT,QAAmB,mBAAnB;AACA,SAASC,EAAT,QAAmB,mBAAnB;;AAqBA,MAAMC,KAA2B,GAAG,MAAM;AACtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAC,CAAF,CAA9C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMiB,cAAc,GAAG,CAAvB;AAEA,QAAMC,KAAK,GAAGjB,MAAM,CAAC,CAAD,CAApB;AACA,QAAMkB,MAAM,GAAG,CAACd,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAf,CARsC,CAQX;;AAE3B,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,CAACsB,UAAU,EAAX,EAAeA,UAAU,EAAzB,CAAD,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAAC,CAACyB,SAAS,CAACL,KAAK,CAAC,CAAD,CAAN,CAAV,EAAsBK,SAAS,CAACL,KAAK,CAAC,CAAD,CAAN,CAA/B,CAAD,CAApC;;AAKA,WAASK,SAAT,CAAmBC,IAAnB,EAAiC;AAC7B,WAAO,CAACA,IAAI,GAAC,GAAN,EAAWA,IAAI,GAAC,GAAhB,EAAqBA,IAAI,GAAC,GAA1B,EAA+BA,IAAI,GAAC,GAApC,EAAyCA,IAAI,GAAC,GAA9C,EAAmDA,IAAI,GAAC,GAAxD,EAA6DA,IAAI,GAAC,GAAlE,EAAuEA,IAAI,GAAC,GAA5E,CAAP;AACH;;AAED,WAASJ,UAAT,GAAsB;AAClB;AACA;AAEA;AACA;AACA;AACA;AAEA,UAAMH,MAAM,GAAG,CAACd,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAf,CATkB,CAWlB;;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYvB,EAAZ,EAAgBwB,MAA5B,EAZkB,CAalB;;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYX,MAAM,CAACD,KAAD,CAAlB,EAA2Ba,MAAvC;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAEA,WAAO,OAAP;AACH;;AAED,WAASc,WAAT,GAAuB;AACnB,QAAIC,cAAc,GAAGtB,UAArB;AACA,QAAIuB,eAAe,GAAGrB,WAAtB;;AACA,QAAIsB,IAAI,CAACC,GAAL,CAASvB,WAAT,EAAsBF,UAAtB,IAAkC,CAAlC,IAAuCS,KAAK,CAACW,MAAjD,EAAyD;AACrD,YAAMM,QAAQ,GAAG,CAAC,GAAGjB,KAAJ,CAAjB;AACA,YAAMkB,OAAO,GAAGhB,UAAU,EAA1B;AACA,YAAMiB,SAAS,GAAG,CAAC,GAAGhB,MAAJ,CAAlB;AACAgB,MAAAA,SAAS,CAACC,IAAV,CAAef,SAAS,CAACa,OAAD,CAAxB;AACAD,MAAAA,QAAQ,CAACG,IAAT,CAAcF,OAAd;;AACA,UAAID,QAAQ,CAACN,MAAT,GAAkBd,cAAtB,EAAsC;AAClCoB,QAAAA,QAAQ,CAACI,KAAT;AACAF,QAAAA,SAAS,CAACE,KAAV;AACAR,QAAAA,cAAc,IAAI,CAAlB;AACAC,QAAAA,eAAe,IAAI,CAAnB;AACH;;AACDV,MAAAA,SAAS,CAACe,SAAD,CAAT;AACAlB,MAAAA,QAAQ,CAACgB,QAAD,CAAR;AACH;;AAED,QAAI5B,SAAS,IAAIE,UAAU,GAAGE,WAA9B,EAA2CqB,eAAe,IAAI,CAAnB;AAC3C,QAAI,CAACzB,SAAD,IAAcI,WAAW,GAAGF,UAAhC,EAA4CsB,cAAc,IAAI,CAAlB;AAE5CrB,IAAAA,aAAa,CAACqB,cAAD,CAAb;AACAnB,IAAAA,cAAc,CAACoB,eAAD,CAAd;AACAxB,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAED,WAAS0B,SAAT,GAAqB;AACjB,UAAMC,QAAQ,GAAG5B,OAAO,GAAG,CAAH,GAAO,CAA/B;AACA,QAAIoB,IAAI,CAACS,GAAL,CAASjC,UAAT,EAAqBE,WAArB,IAAoC8B,QAAxC,EAAkD,OAAO,KAAP;AAClD,WAAO,IAAP;AACH;;AAED,WAASE,YAAT,GAAwB;AACpB,QAAI,CAACH,SAAS,EAAd,EAAkB;AAClB1B,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAEA,QAAIA,SAAS,IAAIE,UAAU,GAAGE,WAA9B,EAA2C;AAC3C,QAAI,CAACJ,SAAD,IAAcI,WAAW,GAAGF,UAAhC,EAA4C;AAC5C,QAAIF,SAAJ,EAAeK,cAAc,CAACD,WAAW,GAAC,CAAb,CAAd,CAAf,KACKD,aAAa,CAACD,UAAU,GAAC,CAAZ,CAAb;AACR;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAES,KAAK,CAACT,UAAD,CAAzB;AAAuC,IAAA,OAAO,EAAEF,SAAhD;AAA2D,IAAA,OAAO,EAAEM,OAApE;AAA6E,IAAA,MAAM,EAAEQ,MAAM,CAACZ,UAAD,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAES,KAAK,CAACP,WAAD,CAAzB;AAAwC,IAAA,OAAO,EAAE,CAACJ,SAAlD;AAA6D,IAAA,OAAO,EAAEM,OAAtE;AAA+E,IAAA,MAAM,EAAEQ,MAAM,CAAEV,WAAW,GAAG,CAAf,GAAoB,CAApB,GAAwBA,WAAzB,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAE,MAAMmB,WAAW,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAE,MAAMa,YAAY,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAGH,SAAS,EAA7B;AAAkC,IAAA,IAAI,EAAG,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,eAOI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,OAAO,EAAE,MAAMV,WAAW,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAG,IAApB;AAA2B,IAAA,IAAI,EAAG,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADJ;AAaH,CAnGD;;AAqGA,eAAexB,KAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\nimport ProgressBar from './ProgressBar'\r\nimport WordsDisplay from './WordsDisplay'\r\nimport Chevrons from './Chevrons'\r\nimport { AA } from '../assets/data/AA';\r\nimport { AE } from '../assets/data/AE';\r\nimport { AH } from '../assets/data/AH';\r\n\r\nimport { AO } from '../assets/data/AO';\r\nimport { AW } from '../assets/data/AW';\r\nimport { AY } from '../assets/data/AY';\r\nimport { EH } from '../assets/data/EH';\r\nimport { ER } from '../assets/data/ER';\r\nimport { EY } from '../assets/data/EY';\r\nimport { IH } from '../assets/data/IH';\r\nimport { IY } from '../assets/data/IY';\r\nimport { OW } from '../assets/data/OW';\r\nimport { OY } from '../assets/data/OY';\r\nimport { UH } from '../assets/data/UH';\r\nimport { UW } from '../assets/data/UW';\r\n\r\n\r\n\r\ninterface WordsProps {\r\n}\r\n\r\n\r\nconst Words: React.FC<WordsProps> = () => {\r\n    const [showFirst, setShowFirst] = useState(true);\r\n    const [firstIndex, setFirstIndex] = useState(0);\r\n    const [secondIndex, setSecondIndex] = useState(-1);\r\n    const [forward, setForward] = useState(true);\r\n    const maxWordHistory = 6;\r\n\r\n    const vowel = useRef(0);\r\n    const vowels = [AA, AE, AH]//, AH, AO, AW, AY, EH, EY, IH, IY, OW, OY, UH, UW];\r\n\r\n    const [words, setWords] = useState([getNewWord(), getNewWord()]);\r\n    const [rhymes, setRhymes] = useState([getRhymes(words[0]), getRhymes(words[1])]);\r\n\r\n    \r\n    \r\n\r\n    function getRhymes(word: string) {\r\n        return [word+\"1\", word+\"2\", word+\"3\", word+\"4\", word+\"5\", word+\"6\", word+\"7\", word+\"8\"];\r\n    }\r\n    \r\n    function getNewWord() {\r\n        // setVowel(Math.floor(Math.random() * vowels.length));\r\n        // console.log(Object.keys(vowels[vowel]).length);\r\n        \r\n        // switch (vowel) {\r\n        //     case 0:\r\n        //         let length = Object.keys(AA).length\r\n        // }\r\n\r\n        const vowels = [AA, AE, AH]\r\n\r\n        //returns lengths\r\n        console.log(Object.keys(AH).length);\r\n        //returns null error\r\n        console.log(Object.keys(vowels[vowel]).length);\r\n\r\n        console.log(vowel);\r\n        \r\n        return \"extra\";\r\n    }\r\n\r\n    function forwardWord() {\r\n        let nextFirstIndex = firstIndex;\r\n        let nextSecondIndex = secondIndex;\r\n        if (Math.max(secondIndex, firstIndex)+1 >= words.length) {\r\n            const newWords = [...words];\r\n            const newWord = getNewWord();\r\n            const newRhymes = [...rhymes];\r\n            newRhymes.push(getRhymes(newWord));\r\n            newWords.push(newWord);\r\n            if (newWords.length > maxWordHistory) {\r\n                newWords.shift();\r\n                newRhymes.shift();\r\n                nextFirstIndex -= 1;\r\n                nextSecondIndex -= 1;\r\n            } \r\n            setRhymes(newRhymes);\r\n            setWords(newWords);\r\n        }     \r\n\r\n        if (showFirst && firstIndex > secondIndex) nextSecondIndex += 2;\r\n        if (!showFirst && secondIndex > firstIndex) nextFirstIndex += 2;\r\n\r\n        setFirstIndex(nextFirstIndex);\r\n        setSecondIndex(nextSecondIndex);\r\n        setShowFirst(!showFirst);\r\n        setForward(true);\r\n    }\r\n\r\n    function canGoBack() {\r\n        const minValue = forward ? 0 : 1\r\n        if (Math.min(firstIndex, secondIndex) < minValue) return false;\r\n        return true;\r\n    }\r\n\r\n    function previousWord() {\r\n        if (!canGoBack()) return;\r\n        setForward(false);\r\n        setShowFirst(!showFirst);\r\n\r\n        if (showFirst && firstIndex > secondIndex) return;\r\n        if (!showFirst && secondIndex > firstIndex) return;\r\n        if (showFirst) setSecondIndex(secondIndex-2);\r\n        else setFirstIndex(firstIndex-2);       \r\n    }\r\n\r\n    return (\r\n        <div className=\"words\">\r\n            <WordsDisplay word={words[firstIndex]} visible={showFirst} forward={forward} rhymes={rhymes[firstIndex]}></WordsDisplay>\r\n            <WordsDisplay word={words[secondIndex]} visible={!showFirst} forward={forward} rhymes={rhymes[(secondIndex < 0) ? 0 : secondIndex]}></WordsDisplay>\r\n            <ProgressBar onComplete={() => forwardWord()}></ProgressBar>\r\n            <div className=\"chevron-button\" onClick={() => previousWord()}>\r\n                <Chevrons enabled={ canGoBack() } left={ true } ></Chevrons> \r\n            </div>\r\n            <div className=\"chevron-button right\" onClick={() => forwardWord()}>\r\n                <Chevrons enabled={ true } left={ false } ></Chevrons> \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Words;\r\n  "]},"metadata":{},"sourceType":"module"}