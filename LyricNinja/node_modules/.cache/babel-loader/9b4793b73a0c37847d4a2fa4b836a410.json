{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peran\\\\LyricNinja\\\\Lyric_Ninja\\\\src\\\\components\\\\ProgressBar.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(0);\n  const animationFrameHandle = useRef(0);\n  useEffect(() => {\n    function render() {\n      setProgress(oldValue => {\n        console.log(oldValue);\n        if (oldValue >= 1) return 0;\n        return oldValue + 1 / 600;\n      });\n      animationFrameHandle.current = requestAnimationFrame(render);\n    }\n\n    render();\n    return () => cancelAnimationFrame(animationFrameHandle.current);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"word-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    style: {\n      transform: `scaleX(${progress})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/Peran/LyricNinja/Lyric_Ninja/src/components/ProgressBar.tsx"],"names":["React","useState","useEffect","useRef","ProgressBar","progress","setProgress","animationFrameHandle","render","oldValue","console","log","current","requestAnimationFrame","cancelAnimationFrame","transform"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAGA,MAAMC,WAAqB,GAAG,MAAM;AAGhC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAMM,oBAAoB,GAAGJ,MAAM,CAAC,CAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd,aAASM,MAAT,GAAkB;AAEhBF,MAAAA,WAAW,CAACG,QAAQ,IAAI;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAIA,QAAQ,IAAI,CAAhB,EAAmB,OAAO,CAAP;AACnB,eAAOA,QAAQ,GAAI,IAAE,GAArB;AACD,OAJU,CAAX;AAKAF,MAAAA,oBAAoB,CAACK,OAArB,GAA+BC,qBAAqB,CAACL,MAAD,CAApD;AAED;;AAEDA,IAAAA,MAAM;AAEN,WAAO,MAAMM,oBAAoB,CAACP,oBAAoB,CAACK,OAAtB,CAAjC;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAG,UAASV,QAAS;AAAhC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ;AAKD,CA/BH;;AAiCA,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { IonProgressBar } from '@ionic/react';\r\n\r\nconst ProgressBar: React.FC = () => {\r\n\r\n\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const animationFrameHandle = useRef(0);\r\n\r\n    useEffect(() => {\r\n\r\n      function render() {\r\n        \r\n        setProgress(oldValue => {\r\n          console.log(oldValue);\r\n          if (oldValue >= 1) return 0;\r\n          return oldValue + (1/600);\r\n        })\r\n        animationFrameHandle.current = requestAnimationFrame(render);\r\n\r\n      }\r\n\r\n      render();\r\n\r\n      return () => cancelAnimationFrame(animationFrameHandle.current);\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"word-bar\">\r\n          <div className=\"progress-bar\" style={{ transform: `scaleX(${progress})` }} />\r\n        </div>\r\n    );\r\n  };\r\n  \r\nexport default ProgressBar;\r\n  "]},"metadata":{},"sourceType":"module"}