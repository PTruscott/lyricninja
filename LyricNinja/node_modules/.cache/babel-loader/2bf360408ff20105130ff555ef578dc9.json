{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peran\\\\LyricNinja\\\\Lyric_Ninja\\\\src\\\\components\\\\MainWord.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst MainWord = ({\n  word,\n  nextWord,\n  position\n}) => {\n  const [progress, setProgress] = useState(0);\n  const duration = 0.3;\n  const animationFrameHandle = useRef(0);\n  const prevTime = useRef(performance.now());\n  const outputValueRange = 1;\n\n  function easeIn(x) {\n    return x * x * x;\n  }\n\n  function easeOut(x) {\n    return 1 - Math.pow(1 - x, 3);\n  }\n\n  useEffect(() => {\n    setProgress(0);\n    prevTime.current = performance.now();\n\n    function render(timestamp) {\n      if (position === 0) {\n        animationFrameHandle.current = requestAnimationFrame(render);\n        setProgress(oldValue => {\n          if (oldValue >= 1) {\n            cancelAnimationFrame(animationFrameHandle.current);\n            return 0;\n          }\n\n          const secondsElapsed = (timestamp - prevTime.current) / 1000;\n          return oldValue + outputValueRange * secondsElapsed / duration;\n        });\n        prevTime.current = timestamp;\n      }\n    }\n\n    render(performance.now());\n    return () => cancelAnimationFrame(animationFrameHandle.current);\n  }, [position, word]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-word\",\n    style: {\n      opacity: easeOut(progress),\n      transform: `translateX(${50}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, word);\n};\n\nexport default MainWord;","map":{"version":3,"sources":["C:/Users/Peran/LyricNinja/Lyric_Ninja/src/components/MainWord.tsx"],"names":["React","useState","useEffect","useRef","MainWord","word","nextWord","position","progress","setProgress","duration","animationFrameHandle","prevTime","performance","now","outputValueRange","easeIn","x","easeOut","Math","pow","current","render","timestamp","requestAnimationFrame","oldValue","cancelAnimationFrame","secondsElapsed","opacity","transform"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAUA,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAiC;AAGvE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAMS,QAAQ,GAAG,GAAjB;AACA,QAAMC,oBAAoB,GAAGR,MAAM,CAAC,CAAD,CAAnC;AACA,QAAMS,QAAQ,GAAGT,MAAM,CAACU,WAAW,CAACC,GAAZ,EAAD,CAAvB;AACA,QAAMC,gBAAgB,GAAG,CAAzB;;AAEA,WAASC,MAAT,CAAgBC,CAAhB,EAAmC;AAC/B,WAAOA,CAAC,GAAGA,CAAJ,GAAQA,CAAf;AACH;;AAED,WAASC,OAAT,CAAiBD,CAAjB,EAAoC;AAChC,WAAO,IAAIE,IAAI,CAACC,GAAL,CAAS,IAAIH,CAAb,EAAgB,CAAhB,CAAX;AACH;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAG,IAAAA,QAAQ,CAACS,OAAT,GAAmBR,WAAW,CAACC,GAAZ,EAAnB;;AACA,aAASQ,MAAT,CAAgBC,SAAhB,EAAgD;AAC5C,UAAIhB,QAAQ,KAAK,CAAjB,EAAoB;AAChBI,QAAAA,oBAAoB,CAACU,OAArB,GAA+BG,qBAAqB,CAACF,MAAD,CAApD;AACAb,QAAAA,WAAW,CAACgB,QAAQ,IAAI;AACpB,cAAIA,QAAQ,IAAI,CAAhB,EAAmB;AACfC,YAAAA,oBAAoB,CAACf,oBAAoB,CAACU,OAAtB,CAApB;AACA,mBAAO,CAAP;AACH;;AACD,gBAAMM,cAAc,GAAG,CAACJ,SAAS,GAAGX,QAAQ,CAACS,OAAtB,IAAiC,IAAxD;AACA,iBAAOI,QAAQ,GAAGV,gBAAgB,GAAGY,cAAnB,GAAoCjB,QAAtD;AACH,SAPU,CAAX;AAQAE,QAAAA,QAAQ,CAACS,OAAT,GAAmBE,SAAnB;AACH;AACJ;;AAEDD,IAAAA,MAAM,CAACT,WAAW,CAACC,GAAZ,EAAD,CAAN;AACA,WAAO,MAAMY,oBAAoB,CAACf,oBAAoB,CAACU,OAAtB,CAAjC;AACH,GApBQ,EAoBN,CAACd,QAAD,EAAWF,IAAX,CApBM,CAAT;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEuB,MAAAA,OAAO,EAAEV,OAAO,CAACV,QAAD,CAAlB;AAA8BqB,MAAAA,SAAS,EAAG,cAAa,EAAG;AAA1D,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,IADH,CADJ;AAKD,CA7CH;;AA+CA,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\ninterface MainWordProps {\r\n  word: string;\r\n  nextWord: string;\r\n  position: number;\r\n}\r\n\r\n\r\nconst MainWord: React.FC<MainWordProps> = ({ word, nextWord, position}) => {\r\n\r\n\r\n    const [progress, setProgress] = useState(0);\r\n    const duration = 0.3;\r\n    const animationFrameHandle = useRef(0);\r\n    const prevTime = useRef(performance.now());\r\n    const outputValueRange = 1;\r\n\r\n    function easeIn(x: number): number {\r\n        return x * x * x;\r\n    }\r\n\r\n    function easeOut(x: number): number {\r\n        return 1 - Math.pow(1 - x, 3);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setProgress(0);\r\n        prevTime.current = performance.now();\r\n        function render(timestamp: DOMHighResTimeStamp) {\r\n            if (position === 0) {\r\n                animationFrameHandle.current = requestAnimationFrame(render);\r\n                setProgress(oldValue => {\r\n                    if (oldValue >= 1) {\r\n                        cancelAnimationFrame(animationFrameHandle.current);\r\n                        return 0;\r\n                    } \r\n                    const secondsElapsed = (timestamp - prevTime.current) / 1000;\r\n                    return oldValue + outputValueRange * secondsElapsed / duration;\r\n                })\r\n                prevTime.current = timestamp;\r\n            }\r\n        }\r\n\r\n        render(performance.now());\r\n        return () => cancelAnimationFrame(animationFrameHandle.current);\r\n    }, [position, word])\r\n\r\n\r\n    return (\r\n        <div className=\"main-word\" style={{ opacity: easeOut(progress), transform: `translateX(${50}%)`}}>\r\n          {word}\r\n        </div>\r\n    );\r\n  };\r\n\r\nexport default MainWord;\r\n  "]},"metadata":{},"sourceType":"module"}